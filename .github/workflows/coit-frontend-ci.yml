
name: CI
on: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ] 
  workflow_dispatch:
# env: 
#   version: 4.7.0.2747-linux
jobs: 
  buildandpush:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v3
      - name: Setup Sonar-Scanner
        env: 
         version: 4.7.0.2747-linux
        run: |
         wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$version.zip
         unzip sonar-scanner-cli-$version.zip -d $HOME/sonarqube
         chmod 755 $HOME/sonarqube/sonar-scanner-$version/bin/sonar-scanner
      - name: Scan the project
        env:
          sonarqube_project: ${{ secrets.SONARQUBE_PROJECT }}
          api_key: ${{ secrets.SONARQUBE_API_KEY }}
          sonarqube_url: ${{ secrets.SONARQUBE_URL }}
          version: 4.7.0.2747-linux
        run: |
          cd coit-frontend
          $HOME/sonarqube/sonar-scanner-$version/bin/sonar-scanner \
            -Dsonar.projectKey=$sonarqube_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=$sonarqube_url \
            -Dsonar.login=$api_key  
      - name: Run Unit Tests
        run: |
         pwd
         npm test || true
      - name: Check the vulnaribilites of Depenencies
        run: |
         pwd
         npm audit || true
      - name: BUild the container Image
        run: |
           docker build coit-frontend -t chittiinfo/coit-frontend:latest -f coit-frontend/Dockerfile-multistage     
      - name: Docker Login
        env: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login -u $username -p $password
      - name: push the container Image    
        run: |
          docker push chittiinfo/coit-frontend:latest
      

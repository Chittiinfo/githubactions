
name: CI
on: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ] 
  workflow_dispatch:
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
 # DEPLOYMENT_NAME: gke-test # Add your deployment name here.
 # IMAGE: static-site
# env: 
#   version: 4.7.0.2747-linux
jobs: 
  buildandpush:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v3
      - name: Setup Sonar-Scanner
        env: 
         version: 4.7.0.2747-linux
        run: |
         wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$version.zip
         unzip sonar-scanner-cli-$version.zip -d $HOME/sonarqube
         chmod 755 $HOME/sonarqube/sonar-scanner-$version/bin/sonar-scanner
      - name: Scan the project
        env:
          sonarqube_project: ${{ secrets.SONARQUBE_PROJECT }}
          api_key: ${{ secrets.SONARQUBE_API_KEY }}
          sonarqube_url: ${{ secrets.SONARQUBE_URL }}
          version: 4.7.0.2747-linux
        run: |
          cd coit-frontend
          $HOME/sonarqube/sonar-scanner-$version/bin/sonar-scanner \
            -Dsonar.projectKey=$sonarqube_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=$sonarqube_url \
            -Dsonar.login=$api_key  
      - name: Run Unit Tests
        run: |
         pwd
         cd coit-frontend
         npm test || true
      - name: Check the vulnaribilites of Depenencies
        run: |
         pwd
         cd coit-frontend
         npm audit || true
      - name: BUild the container Image
        run: |
           docker build coit-frontend -t chittiinfo/coit-frontend:latest -f coit-frontend/Dockerfile-multistage     
      - name: Docker Login
        env: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login -u $username -p $password
      - name: push the container Image    
        run: |
          docker push chittiinfo/coit-frontend:latest
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - name: Eploy The GKE cluster
        run: |
          cd resource-manifests/DeploymentAndServices-All
          kubectl apply -f coit-frontend-deployment.yaml
          kubectl apply -f service-coit-frontend-lb.yaml
      
      
# https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-google-kubernetes-engine